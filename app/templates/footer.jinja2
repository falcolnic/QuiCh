<footer class="text-white py-2">
    <div class="d-flex justify-content-between align-items-center px-3">
        <div class="cursor text-md space-y-1" style="animation: fadeInLeft 1s; ease-out;">
            <span class="font-semibold">&copy; 2025 QuiCh. All rights reserved.</span>
            <br>
            <a href="/LICENSE" class="transition-all duration-300 ease-out underline hover:text-orange-500">View License</a>
        </div>
        <div class="d-flex align-items-center space-x-4">
            <i class="fas fa-map-marker-alt text-md"></i>
            <div style="animation: fadeInLeft 1s; ease-out;">
                <span id="user-location cursor" class="text-lg font-semibold">Loading location...</span>
                <br>
                <small class="text-white text-md cursor">From your IP â€¢ <a href="#" id="update-location" class="text-lg underline hover:text-orange-500 transition-all duration-300 ease-out">Update</a></small>
            </div>
        </div>
    </div>
</footer>

<script>
    async function getLocationFromIP() {
        try {
            // Fix: Use the correct endpoint URL
            const res = await fetch('/v1/proxy/location');
            if (!res.ok) {
                throw new Error(`Server responded with status: ${res.status}`);
            }
            
            const data = await res.json();

            const parts = [data.city, data.region, data.country_name];
            const uniqueParts = [...new Set(parts.filter(Boolean))]; 
            document.getElementById('user-location cursor').textContent = uniqueParts.join(', ') || 'Location unavailable';
        } catch (err) {
            document.getElementById('user-location cursor').textContent = 'Location unavailable';
            console.error('IP location error:', err);
        }
    }
    
    function getCurrentPositionAsync() {
        return new Promise((resolve, reject) => {
            navigator.geolocation.getCurrentPosition(resolve, reject);
        });
    }

    async function updateWithPreciseLocation() {
        try {
            const position = await getCurrentPositionAsync();
            const { latitude, longitude } = position.coords;
            const res = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`);
            const locationData = await res.json();
            const address = locationData.address;
            const displayName = [
                address?.borough,
                address?.city,
            ].filter(Boolean).join(', ');
            document.getElementById('user-location cursor').textContent = displayName;
        } catch (error) {
            alert('Unable to retrieve your direct location. Please check your browser settings.');
            console.error('Geolocation error:', error);
        }
    }

    window.addEventListener('DOMContentLoaded', () => {
        getLocationFromIP();
        const updateLink = document.getElementById('update-location');
        if (updateLink) {
            updateLink.addEventListener('click', event => {
                event.preventDefault();
                updateWithPreciseLocation();
            });
        }
    });
</script>
